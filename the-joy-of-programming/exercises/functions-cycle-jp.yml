title: Cycle
description: |
  Write a function `cycle` to takes a shape as argument and
  creates a grid of 4 shapes generated by rotating the
  given shape by 0, 90, 180 and 270 degees respectively.

  The original shape will be in the top-right corner.

code: |
  # the beside, below and grid functions are already defined for you
  def beside(a, b):
      a1 = a | scale(x=0.5) | translate(x=-75)
      b1 = b | scale(x=0.5) | translate(x=75)
      return a1 + b1

  def below(a, b):
      a1 = a | scale(y=0.5) | translate(y=75)
      b1 = b | scale(y=0.5) | translate(y=-75)
      return a1 + b1

  def grid(a, b, c, d):
      return below(
          beside(a, b),
          beside(c, d))

  # define the cycle function here


  # make a ball and cycle of it
  ball =  circle(fill="lightblue") + ellipse(fill="skyblue") + circle(x=80, y=0, r=20, fill="darkblue")
  shape = cycle(ball)
  show(shape)

answer: |-
  # define the cycle function here
  def beside(a, b):
      a1 = a | scale(x=0.5) | translate(x=-75)
      b1 = b | scale(x=0.5) | translate(x=75)
      return a1 + b1

  def below(a, b):
      a1 = a | scale(y=0.5) | translate(y=75)
      b1 = b | scale(y=0.5) | translate(y=-75)
      return a1 + b1

  def grid(a, b, c, d):
      return below(
          beside(a, b),
          beside(c, d))

  def cycle(shape):
    return grid(
      shape | rotate(90), shape,
      shape | rotate(180), shape | rotate(270))

  # make a ball and cycle of it
  ball =  circle(fill="lightblue") + ellipse(fill="skyblue") + circle(x=80, y=0, r=20, fill="darkblue")
  shape = cycle(ball)
  show(shape)
